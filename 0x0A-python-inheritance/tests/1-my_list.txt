``1-my_list`` module test file
=============================

Using MyList class:
-------------------

Import class:
    >>> MyList = __import__('1-my_list').MyList

Test list with positive integers:

    >>> my_list = MyList()
    >>> my_list.append(2)
    >>> my_list.append(6)
    >>> my_list.append(1)
    >>> my_list.append(3)
    >>> my_list.append(5)
    >>> my_list.append(4)

    >>> print(my_list)
    [2, 6, 1, 3, 5, 4]

    >>> my_list.print_sorted()
    [1, 2, 3, 4, 5, 6]

    >>> print(my_list)
    [2, 6, 1, 3, 5, 4]

Test list with both positive and negative:

    >>> new_list = MyList()
    >>> new_list.append(0)
    >>> new_list.append(2)
    >>> new_list.append(3)
    >>> new_list.append(-7)
    >>> new_list.append(-3)
    >>> new_list.append(-9)

    >>> new_list.print_sorted()
    [-9, -7, -3, 0, 2, 3]

    >>> MyList.print_sorted(new_list)
    [-9, -7, -3, 0, 2, 3]

    >>> print(new_list)
    [0, 2, 3, -7, -3, -9]

Test giving parameter to print_sorted method when called from object:

    >>> new_list.print_sorted(new_list)
    Traceback (most recent call last):
        ...
    TypeError: print_sorted() takes 1 positional argument but 2 were given

Test list creates using MyList class:

    >>> my_list1 = MyList([2, 4, 3, 1, 5, 6])
    >>> my_list1.print_sorted()
    [1, 2, 3, 4, 5, 6]
    >>> print(my_list1)
    [2, 4, 3, 1, 5, 6]

Test list is empty:

    >>> my_list2 = MyList([])
    >>> my_list2.print_sorted()
    []

Test list is not instance of class MyList:

    >>> my_list3 = [2, 3, 1, 4, 6, 5]
    >>> my_list3.print_sorted()
    Traceback (most recent call last):
        ...
    AttributeError: 'list' object has no attribute 'print_sorted'
