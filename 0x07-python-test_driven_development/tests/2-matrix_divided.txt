The ``2-matrix_divided`` module test file.
==========================================

Using ``matrix_divided``
------------------------

Import ``matrix_divided``:
    >>> matrix_divided = __import__('2-matrix_divided').matrix_divided

Test valid matrix and div values:
    >>> matrix_1 = [[1, 2, 3], [4, 5, 6]]

    >>> print(matrix_divided(matrix_1, 1))
    [[1.0, 2.0, 3.0], [4.0, 5.0, 6.0]]

    >>> print(matrix_divided(matrix_1, 3))
    [[0.33, 0.67, 1.0], [1.33, 1.67, 2.0]]

    >>> print(matrix_divided(matrix_1, -2))
    [[-0.5, -1.0, -1.5], [-2.0, -2.5, -3.0]]

    >>> print(matrix_divided(matrix_1, 2.511))
    [[0.4, 0.8, 1.19], [1.59, 1.99, 2.39]]

Test with invalid div:

    >>> # div == 0

    >>> matrix_divided(matrix_1, 0)
    Traceback (most recent call last):
        ...
    ZeroDivisionError: division by zero

    >>> # div not integer or float

    >>> matrix_divided(matrix_1, "one")
    Traceback (most recent call last):
        ...
    TypeError: div must be a number

Test with invalid matrix:

    >>> # matrix with value not integer or float

    >>> matrix_2 = [[1, 'two', 3], [4, 5, 6]]

    >>> matrix_divided(matrix_2, 1)
    Traceback (most recent call last):
        ...
    TypeError: matrix must be a matrix (list of lists) of integers/floats

    >>> # matrix with rows of different sizes

    >>> matrix_3 = [[1, 2, 3, 4], [5, 6, 7]]

    >>> matrix_divided(matrix_3, 1)
    Traceback (most recent call last):
        ...
    TypeError: Each row of the matrix must have the same size
